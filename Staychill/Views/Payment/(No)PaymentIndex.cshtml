@model Staychill.ViewModel.CartViewModel

<div class="container-fluid">
    <div class="row border">
        <h1>Payment Page</h1>
        <form asp-action="CreateShipment" asp-controller="Tracking" method="post">
            <!-- LEFT COLUMN -->
            <div class="left-column col-12 col-sm-6 p-2">
                <h3>Select Payment Method</h3>
                <div>
                    <!-- BANK TRANSFER -->
                    <input type="radio" name="Paymentmethod" value="BankTransfer" id="bankTransfer" />
                    <label for="bankTransfer">Bank Transfer</label>
                    <div id="bankTransferDetails" style="display:none;">
                        <label for="bankAccount">Select Bank Account:</label>
                        <select name="PaymentViewModel.BankTransfer.AccountId" id="bankAccount" asp-for="PaymentViewModel.BankTransfer.Accounts">
                            @foreach (var account in Model.PaymentViewModel.BankTransfer.Accounts)
                            {
                                <option value="@account.Id">@account.BankName</option>
                            }
                        </select>
                        <input type="text" name="PaymentViewModel.BankTransfer.BankNumber" id="bankNumber" placeholder="Bank Account Number" asp-for="PaymentViewModel.BankTransfer.BankNumber" />
                    </div>

                    <!-- CREDIT CARD -->
                    <input type="radio" name="Paymentmethod" value="CreditCard" id="creditCard" />
                    <label for="creditCard">Credit Card</label>
                    <div id="creditCardDetails" style="display:none;">
                        <input type="text" name="PaymentViewModel.CreditCard.NameOnCard" id="cardName" placeholder="Cardholder Name" asp-for="PaymentViewModel.CreditCard.NameOnCard" />
                        <input type="text" name="PaymentViewModel.CreditCard.CardNumber" id="cardNumber" placeholder="Card Number" maxlength="13" asp-for="PaymentViewModel.CreditCard.CardNumber" />
                        <input type="text" name="PaymentViewModel.CreditCard.ExpiredDate" id="expiryDate" placeholder="MM/YY" asp-for="PaymentViewModel.CreditCard.ExpiredDate" />
                        <input type="text" name="PaymentViewModel.CreditCard.CVV" id="cvv" placeholder="CVV" asp-for="PaymentViewModel.CreditCard.CVV" />
                    </div>

                    <!-- QR CODE -->
                    <input type="radio" name="Paymentmethod" value="Prompt Pay" id="qrData" />
                    <label for="qrData">QR Code</label>
                    <div id="qrDataDetails" style="display:none;">
                        <img src="#" alt="Staychill QRCode" />
                        <input type="file" name="PaymentViewModel.QRData.UserPic" id="qrPic" />
                    </div>
                </div>
            </div>

            <!-- RIGHT COLUMN -->
            <div class="right-column col-12 col-sm-6 p-2">
                <h3>Cart Details</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Total Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cart in Model.CartItemDetails)
                        {
                            foreach (var item in cart.CartItems)
                            {
                                <tr>
                                    <td>@item.Product.ProductName</td>
                                    <td>@item.TotalPrice</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>

                <h3>Order Summary</h3>
                <p>Total Discount: @Model.TotalDiscountAmount ฿</p>
                <p>Total Price after Discount: @Model.DiscountedTotal ฿</p>


                <button type="submit" class="btn btn-primary mt-2">Pay for All Items</button>
            
            </div>
        </form>
    </div>
</div>


<script>
    document.querySelectorAll('input[name="Paymentmethod"]').forEach(input => {
        input.addEventListener('change', function () {
            // Hide all payment method details
            document.getElementById('bankTransferDetails').style.display = 'none';
            document.getElementById('creditCardDetails').style.display = 'none';
            document.getElementById('qrDataDetails').style.display = 'none';

            // Clear previous input values
            clearInputFields();

            // Show the selected payment method details
            if (this.value === 'BankTransfer') {
                document.getElementById('bankTransferDetails').style.display = 'block';
            } else if (this.value === 'CreditCard') {
                document.getElementById('creditCardDetails').style.display = 'block';
            } else if (this.value === 'Prompt Pay') {
                document.getElementById('qrDataDetails').style.display = 'block';
            }

            // Set the selected payment method ID in the hidden field
            document.getElementById('selectedPaymentMethodId').value = this.value;
        });
    });

    function clearInputFields() {
        // Clear Bank Transfer Fields
        document.getElementById('bankNumber').value = '';

        // Clear Credit Card Fields
        document.getElementById('cardName').value = '';
        document.getElementById('cardNumber').value = '';
        document.getElementById('expiryDate').value = '';
        document.getElementById('cvv').value = '';

        // Clear QR Code Fields
        document.getElementById('qrPic').value = '';
    }



    // Handle radio button changes
    document.querySelectorAll('input[name="PaymentViewModel.SelectedPaymentMethodId"]').forEach(input => {
        input.addEventListener('change', function () {
            // Update selected payment method ID
            document.getElementById('selectedPaymentMethodId').value = this.value;

            // If bank transfer is selected, update account ID and bank number
            if (this.value === 'BankTransfer') {
                updateBankDetails(); // Call the function to update bank details
            }
        });
    });

    // Handle bank account selection change
    document.getElementById('bankAccount').addEventListener('change', function () {
        updateBankDetails(); // Call the function to update bank details when account changes
    });

    // Function to update bank details
    function updateBankDetails() {
        const bankAccountSelect = document.getElementById('bankAccount');
        const selectedAccountId = bankAccountSelect.value; // Get selected account ID
        const selectedBankName = bankAccountSelect.options[bankAccountSelect.selectedIndex].text; // Get selected bank name
        const bankNumber = document.getElementById('bankNumber').value; // Get bank number

        // Set the hidden input value to the bank name
        document.getElementById('selectedBankAccount').value = selectedBankName; // Set to bank name
        document.getElementById('selectedBankNumber').value = bankNumber; // Set bank number
    }


</script>
